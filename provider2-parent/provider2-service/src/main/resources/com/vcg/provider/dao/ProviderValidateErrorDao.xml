<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vcg.provider.dao.ProviderValidateErrorDao" >
  <resultMap id="BaseResultMap" type="com.vcg.provider.model.ProviderValidateError" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="batch_id" property="batchId" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="provider_res_id" property="providerResId" jdbcType="VARCHAR" />
    <result column="error_msg" property="errorMsg" jdbcType="VARCHAR" />
    <result column="asset_format" property="assetFormat" jdbcType="INTEGER" />
    <result column="validate_type" property="validateType" jdbcType="INTEGER" />
    <result column="oss_url" property="ossUrl" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, provider_id, batch_id, file_name, provider_res_id, error_msg, asset_format, validate_type, 
    oss_url, memo, created_time, created_by, updated_time, updated_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vcg.provider.model.query.ProviderValidateErrorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List_Dy" />
    from provider_validate_error
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from provider_validate_error
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from provider_validate_error
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vcg.provider.model.query.ProviderValidateErrorExample" >
    delete from provider_validate_error
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vcg.provider.model.ProviderValidateError" useGeneratedKeys="true" keyProperty="id" >
    insert into provider_validate_error (id, provider_id, batch_id, 
      file_name, provider_res_id, error_msg, 
      asset_format, validate_type, oss_url, 
      memo, created_time, created_by, 
      updated_time, updated_by)
    values (#{id,jdbcType=INTEGER}, #{providerId,jdbcType=INTEGER}, #{batchId,jdbcType=INTEGER}, 
      #{fileName,jdbcType=VARCHAR}, #{providerResId,jdbcType=VARCHAR}, #{errorMsg,jdbcType=VARCHAR}, 
      #{assetFormat,jdbcType=INTEGER}, #{validateType,jdbcType=INTEGER}, #{ossUrl,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vcg.provider.model.ProviderValidateError" useGeneratedKeys="true" keyProperty="id" >
    insert into provider_validate_error
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="batchId != null" >
        batch_id,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="providerResId != null" >
        provider_res_id,
      </if>
      <if test="errorMsg != null" >
        error_msg,
      </if>
      <if test="assetFormat != null" >
        asset_format,
      </if>
      <if test="validateType != null" >
        validate_type,
      </if>
      <if test="ossUrl != null" >
        oss_url,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="batchId != null" >
        #{batchId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="providerResId != null" >
        #{providerResId,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null" >
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="assetFormat != null" >
        #{assetFormat,jdbcType=INTEGER},
      </if>
      <if test="validateType != null" >
        #{validateType,jdbcType=INTEGER},
      </if>
      <if test="ossUrl != null" >
        #{ossUrl,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Integer" parameterType="com.vcg.provider.model.query.ProviderValidateErrorExample" >
    select count(*) from provider_validate_error
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update provider_validate_error
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.batchId != null" >
        batch_id = #{record.batchId,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null" >
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.providerResId != null" >
        provider_res_id = #{record.providerResId,jdbcType=VARCHAR},
      </if>
      <if test="record.errorMsg != null" >
        error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.assetFormat != null" >
        asset_format = #{record.assetFormat,jdbcType=INTEGER},
      </if>
      <if test="record.validateType != null" >
        validate_type = #{record.validateType,jdbcType=INTEGER},
      </if>
      <if test="record.ossUrl != null" >
        oss_url = #{record.ossUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update provider_validate_error
    set id = #{record.id,jdbcType=INTEGER},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      batch_id = #{record.batchId,jdbcType=INTEGER},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      provider_res_id = #{record.providerResId,jdbcType=VARCHAR},
      error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      asset_format = #{record.assetFormat,jdbcType=INTEGER},
      validate_type = #{record.validateType,jdbcType=INTEGER},
      oss_url = #{record.ossUrl,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vcg.provider.model.ProviderValidateError" >
    update provider_validate_error
    <set >
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="batchId != null" >
        batch_id = #{batchId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="providerResId != null" >
        provider_res_id = #{providerResId,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null" >
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="assetFormat != null" >
        asset_format = #{assetFormat,jdbcType=INTEGER},
      </if>
      <if test="validateType != null" >
        validate_type = #{validateType,jdbcType=INTEGER},
      </if>
      <if test="ossUrl != null" >
        oss_url = #{ossUrl,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vcg.provider.model.ProviderValidateError" >
    update provider_validate_error
    set provider_id = #{providerId,jdbcType=INTEGER},
      batch_id = #{batchId,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      provider_res_id = #{providerResId,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      asset_format = #{assetFormat,jdbcType=INTEGER},
      validate_type = #{validateType,jdbcType=INTEGER},
      oss_url = #{ossUrl,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Base_Column_List_Dy" >
    <if test="fields==null" >
      <include refid="Base_Column_List" />
    </if>
    <if test="fields!=null" >
      <foreach collection="fields" item="field" separator="," >
        ${field}
      </foreach>
    </if>
  </sql>
</mapper>