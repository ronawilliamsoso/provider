<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vcg.provider.dao.ProviderPaymentDao" >
  <resultMap id="BaseResultMap" type="com.vcg.provider.model.ProviderPayment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="payment_method" property="paymentMethod" jdbcType="VARCHAR" />
    <result column="branch_bankname" property="branchBankname" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="payee_name" property="payeeName" jdbcType="VARCHAR" />
    <result column="payee_number" property="payeeNumber" jdbcType="VARCHAR" />
    <result column="swift_code" property="swiftCode" jdbcType="VARCHAR" />
    <result column="bank_address" property="bankAddress" jdbcType="VARCHAR" />
    <result column="open_accountaddress" property="openAccountaddress" jdbcType="VARCHAR" />
    <result column="currency" property="currency" jdbcType="INTEGER" />
    <result column="iban" property="iban" jdbcType="VARCHAR" />
    <result column="bank_remark" property="bankRemark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="tax_code" property="taxCode" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="asset_family" property="assetFamily" jdbcType="INTEGER" />
    <result column="is_bank" property="isBank" jdbcType="INTEGER" />
    <result column="tax_rate" property="taxRate" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, provider_id, payment_method, branch_bankname, bank_name, payee_name, payee_number, 
    swift_code, bank_address, open_accountaddress, currency, iban, bank_remark, create_time, 
    modify_time, tax_code, country, asset_family, is_bank, tax_rate, created_time, created_by, 
    updated_time, updated_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vcg.provider.model.query.ProviderPaymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List_Dy" />
    from provider_payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from provider_payment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from provider_payment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vcg.provider.model.query.ProviderPaymentExample" >
    delete from provider_payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vcg.provider.model.ProviderPayment" useGeneratedKeys="true" keyProperty="id" >
    insert into provider_payment (id, provider_id, payment_method, 
      branch_bankname, bank_name, payee_name, 
      payee_number, swift_code, bank_address, 
      open_accountaddress, currency, iban, 
      bank_remark, create_time, modify_time, 
      tax_code, country, asset_family, 
      is_bank, tax_rate, created_time, 
      created_by, updated_time, updated_by
      )
    values (#{id,jdbcType=INTEGER}, #{providerId,jdbcType=INTEGER}, #{paymentMethod,jdbcType=VARCHAR}, 
      #{branchBankname,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{payeeName,jdbcType=VARCHAR}, 
      #{payeeNumber,jdbcType=VARCHAR}, #{swiftCode,jdbcType=VARCHAR}, #{bankAddress,jdbcType=VARCHAR}, 
      #{openAccountaddress,jdbcType=VARCHAR}, #{currency,jdbcType=INTEGER}, #{iban,jdbcType=VARCHAR}, 
      #{bankRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{taxCode,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{assetFamily,jdbcType=INTEGER}, 
      #{isBank,jdbcType=INTEGER}, #{taxRate,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vcg.provider.model.ProviderPayment" useGeneratedKeys="true" keyProperty="id" >
    insert into provider_payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="paymentMethod != null" >
        payment_method,
      </if>
      <if test="branchBankname != null" >
        branch_bankname,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="payeeName != null" >
        payee_name,
      </if>
      <if test="payeeNumber != null" >
        payee_number,
      </if>
      <if test="swiftCode != null" >
        swift_code,
      </if>
      <if test="bankAddress != null" >
        bank_address,
      </if>
      <if test="openAccountaddress != null" >
        open_accountaddress,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="iban != null" >
        iban,
      </if>
      <if test="bankRemark != null" >
        bank_remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="taxCode != null" >
        tax_code,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="assetFamily != null" >
        asset_family,
      </if>
      <if test="isBank != null" >
        is_bank,
      </if>
      <if test="taxRate != null" >
        tax_rate,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="paymentMethod != null" >
        #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="branchBankname != null" >
        #{branchBankname,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="payeeName != null" >
        #{payeeName,jdbcType=VARCHAR},
      </if>
      <if test="payeeNumber != null" >
        #{payeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="swiftCode != null" >
        #{swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null" >
        #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="openAccountaddress != null" >
        #{openAccountaddress,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=INTEGER},
      </if>
      <if test="iban != null" >
        #{iban,jdbcType=VARCHAR},
      </if>
      <if test="bankRemark != null" >
        #{bankRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taxCode != null" >
        #{taxCode,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="assetFamily != null" >
        #{assetFamily,jdbcType=INTEGER},
      </if>
      <if test="isBank != null" >
        #{isBank,jdbcType=INTEGER},
      </if>
      <if test="taxRate != null" >
        #{taxRate,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Integer" parameterType="com.vcg.provider.model.query.ProviderPaymentExample" >
    select count(*) from provider_payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update provider_payment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentMethod != null" >
        payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.branchBankname != null" >
        branch_bankname = #{record.branchBankname,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.payeeName != null" >
        payee_name = #{record.payeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.payeeNumber != null" >
        payee_number = #{record.payeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.swiftCode != null" >
        swift_code = #{record.swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAddress != null" >
        bank_address = #{record.bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.openAccountaddress != null" >
        open_accountaddress = #{record.openAccountaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=INTEGER},
      </if>
      <if test="record.iban != null" >
        iban = #{record.iban,jdbcType=VARCHAR},
      </if>
      <if test="record.bankRemark != null" >
        bank_remark = #{record.bankRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taxCode != null" >
        tax_code = #{record.taxCode,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.assetFamily != null" >
        asset_family = #{record.assetFamily,jdbcType=INTEGER},
      </if>
      <if test="record.isBank != null" >
        is_bank = #{record.isBank,jdbcType=INTEGER},
      </if>
      <if test="record.taxRate != null" >
        tax_rate = #{record.taxRate,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update provider_payment
    set id = #{record.id,jdbcType=INTEGER},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      branch_bankname = #{record.branchBankname,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      payee_name = #{record.payeeName,jdbcType=VARCHAR},
      payee_number = #{record.payeeNumber,jdbcType=VARCHAR},
      swift_code = #{record.swiftCode,jdbcType=VARCHAR},
      bank_address = #{record.bankAddress,jdbcType=VARCHAR},
      open_accountaddress = #{record.openAccountaddress,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=INTEGER},
      iban = #{record.iban,jdbcType=VARCHAR},
      bank_remark = #{record.bankRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      tax_code = #{record.taxCode,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      asset_family = #{record.assetFamily,jdbcType=INTEGER},
      is_bank = #{record.isBank,jdbcType=INTEGER},
      tax_rate = #{record.taxRate,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vcg.provider.model.ProviderPayment" >
    update provider_payment
    <set >
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="paymentMethod != null" >
        payment_method = #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="branchBankname != null" >
        branch_bankname = #{branchBankname,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="payeeName != null" >
        payee_name = #{payeeName,jdbcType=VARCHAR},
      </if>
      <if test="payeeNumber != null" >
        payee_number = #{payeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="swiftCode != null" >
        swift_code = #{swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null" >
        bank_address = #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="openAccountaddress != null" >
        open_accountaddress = #{openAccountaddress,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=INTEGER},
      </if>
      <if test="iban != null" >
        iban = #{iban,jdbcType=VARCHAR},
      </if>
      <if test="bankRemark != null" >
        bank_remark = #{bankRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taxCode != null" >
        tax_code = #{taxCode,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="assetFamily != null" >
        asset_family = #{assetFamily,jdbcType=INTEGER},
      </if>
      <if test="isBank != null" >
        is_bank = #{isBank,jdbcType=INTEGER},
      </if>
      <if test="taxRate != null" >
        tax_rate = #{taxRate,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vcg.provider.model.ProviderPayment" >
    update provider_payment
    set provider_id = #{providerId,jdbcType=INTEGER},
      payment_method = #{paymentMethod,jdbcType=VARCHAR},
      branch_bankname = #{branchBankname,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      payee_name = #{payeeName,jdbcType=VARCHAR},
      payee_number = #{payeeNumber,jdbcType=VARCHAR},
      swift_code = #{swiftCode,jdbcType=VARCHAR},
      bank_address = #{bankAddress,jdbcType=VARCHAR},
      open_accountaddress = #{openAccountaddress,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=INTEGER},
      iban = #{iban,jdbcType=VARCHAR},
      bank_remark = #{bankRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      tax_code = #{taxCode,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      asset_family = #{assetFamily,jdbcType=INTEGER},
      is_bank = #{isBank,jdbcType=INTEGER},
      tax_rate = #{taxRate,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Base_Column_List_Dy" >
    <if test="fields==null" >
      <include refid="Base_Column_List" />
    </if>
    <if test="fields!=null" >
      <foreach collection="fields" item="field" separator="," >
        ${field}
      </foreach>
    </if>
  </sql>
</mapper>