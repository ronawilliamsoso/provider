<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vcg.provider.dao.ResourceSellMonthDao" >
  <resultMap id="BaseResultMap" type="com.vcg.provider.model.ResourceSellMonth" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="sell_month" property="sellMonth" jdbcType="CHAR" />
    <result column="asset_family" property="assetFamily" jdbcType="INTEGER" />
    <result column="provider_name" property="providerName" jdbcType="VARCHAR" />
    <result column="sell_total" property="sellTotal" jdbcType="DECIMAL" />
    <result column="sell_totalus" property="sellTotalus" jdbcType="DECIMAL" />
    <result column="share_total" property="shareTotal" jdbcType="DECIMAL" />
    <result column="share_totalus" property="shareTotalus" jdbcType="DECIMAL" />
    <result column="bad_debt" property="badDebt" jdbcType="DECIMAL" />
    <result column="tax" property="tax" jdbcType="DECIMAL" />
    <result column="net_payment" property="netPayment" jdbcType="DECIMAL" />
    <result column="sell_count" property="sellCount" jdbcType="INTEGER" />
    <result column="exclusive_bonus" property="exclusiveBonus" jdbcType="DECIMAL" />
    <result column="additional_share" property="additionalShare" jdbcType="DECIMAL" />
    <result column="exchange_rate" property="exchangeRate" jdbcType="DECIMAL" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="is_paied" property="isPaied" jdbcType="INTEGER" />
    <result column="is_published" property="isPublished" jdbcType="INTEGER" />
    <result column="agent_type" property="agentType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, provider_id, sell_month, asset_family, provider_name, sell_total, sell_totalus, 
    share_total, share_totalus, bad_debt, tax, net_payment, sell_count, exclusive_bonus, 
    additional_share, exchange_rate, pay_time, is_paied, is_published, agent_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vcg.provider.model.query.ResourceSellMonthExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List_Dy" />
    from resource_sell_month
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from resource_sell_month
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from resource_sell_month
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vcg.provider.model.query.ResourceSellMonthExample" >
    delete from resource_sell_month
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vcg.provider.model.ResourceSellMonth" useGeneratedKeys="true" keyProperty="id" >
    insert into resource_sell_month (id, provider_id, sell_month, 
      asset_family, provider_name, sell_total, 
      sell_totalus, share_total, share_totalus, 
      bad_debt, tax, net_payment, 
      sell_count, exclusive_bonus, additional_share, 
      exchange_rate, pay_time, is_paied, 
      is_published, agent_type)
    values (#{id,jdbcType=INTEGER}, #{providerId,jdbcType=INTEGER}, #{sellMonth,jdbcType=CHAR}, 
      #{assetFamily,jdbcType=INTEGER}, #{providerName,jdbcType=VARCHAR}, #{sellTotal,jdbcType=DECIMAL}, 
      #{sellTotalus,jdbcType=DECIMAL}, #{shareTotal,jdbcType=DECIMAL}, #{shareTotalus,jdbcType=DECIMAL}, 
      #{badDebt,jdbcType=DECIMAL}, #{tax,jdbcType=DECIMAL}, #{netPayment,jdbcType=DECIMAL}, 
      #{sellCount,jdbcType=INTEGER}, #{exclusiveBonus,jdbcType=DECIMAL}, #{additionalShare,jdbcType=DECIMAL}, 
      #{exchangeRate,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP}, #{isPaied,jdbcType=INTEGER}, 
      #{isPublished,jdbcType=INTEGER}, #{agentType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.vcg.provider.model.ResourceSellMonth" useGeneratedKeys="true" keyProperty="id" >
    insert into resource_sell_month
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="sellMonth != null" >
        sell_month,
      </if>
      <if test="assetFamily != null" >
        asset_family,
      </if>
      <if test="providerName != null" >
        provider_name,
      </if>
      <if test="sellTotal != null" >
        sell_total,
      </if>
      <if test="sellTotalus != null" >
        sell_totalus,
      </if>
      <if test="shareTotal != null" >
        share_total,
      </if>
      <if test="shareTotalus != null" >
        share_totalus,
      </if>
      <if test="badDebt != null" >
        bad_debt,
      </if>
      <if test="tax != null" >
        tax,
      </if>
      <if test="netPayment != null" >
        net_payment,
      </if>
      <if test="sellCount != null" >
        sell_count,
      </if>
      <if test="exclusiveBonus != null" >
        exclusive_bonus,
      </if>
      <if test="additionalShare != null" >
        additional_share,
      </if>
      <if test="exchangeRate != null" >
        exchange_rate,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="isPaied != null" >
        is_paied,
      </if>
      <if test="isPublished != null" >
        is_published,
      </if>
      <if test="agentType != null" >
        agent_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="sellMonth != null" >
        #{sellMonth,jdbcType=CHAR},
      </if>
      <if test="assetFamily != null" >
        #{assetFamily,jdbcType=INTEGER},
      </if>
      <if test="providerName != null" >
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="sellTotal != null" >
        #{sellTotal,jdbcType=DECIMAL},
      </if>
      <if test="sellTotalus != null" >
        #{sellTotalus,jdbcType=DECIMAL},
      </if>
      <if test="shareTotal != null" >
        #{shareTotal,jdbcType=DECIMAL},
      </if>
      <if test="shareTotalus != null" >
        #{shareTotalus,jdbcType=DECIMAL},
      </if>
      <if test="badDebt != null" >
        #{badDebt,jdbcType=DECIMAL},
      </if>
      <if test="tax != null" >
        #{tax,jdbcType=DECIMAL},
      </if>
      <if test="netPayment != null" >
        #{netPayment,jdbcType=DECIMAL},
      </if>
      <if test="sellCount != null" >
        #{sellCount,jdbcType=INTEGER},
      </if>
      <if test="exclusiveBonus != null" >
        #{exclusiveBonus,jdbcType=DECIMAL},
      </if>
      <if test="additionalShare != null" >
        #{additionalShare,jdbcType=DECIMAL},
      </if>
      <if test="exchangeRate != null" >
        #{exchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPaied != null" >
        #{isPaied,jdbcType=INTEGER},
      </if>
      <if test="isPublished != null" >
        #{isPublished,jdbcType=INTEGER},
      </if>
      <if test="agentType != null" >
        #{agentType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Integer" parameterType="com.vcg.provider.model.query.ResourceSellMonthExample" >
    select count(*) from resource_sell_month
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update resource_sell_month
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.sellMonth != null" >
        sell_month = #{record.sellMonth,jdbcType=CHAR},
      </if>
      <if test="record.assetFamily != null" >
        asset_family = #{record.assetFamily,jdbcType=INTEGER},
      </if>
      <if test="record.providerName != null" >
        provider_name = #{record.providerName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellTotal != null" >
        sell_total = #{record.sellTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.sellTotalus != null" >
        sell_totalus = #{record.sellTotalus,jdbcType=DECIMAL},
      </if>
      <if test="record.shareTotal != null" >
        share_total = #{record.shareTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.shareTotalus != null" >
        share_totalus = #{record.shareTotalus,jdbcType=DECIMAL},
      </if>
      <if test="record.badDebt != null" >
        bad_debt = #{record.badDebt,jdbcType=DECIMAL},
      </if>
      <if test="record.tax != null" >
        tax = #{record.tax,jdbcType=DECIMAL},
      </if>
      <if test="record.netPayment != null" >
        net_payment = #{record.netPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.sellCount != null" >
        sell_count = #{record.sellCount,jdbcType=INTEGER},
      </if>
      <if test="record.exclusiveBonus != null" >
        exclusive_bonus = #{record.exclusiveBonus,jdbcType=DECIMAL},
      </if>
      <if test="record.additionalShare != null" >
        additional_share = #{record.additionalShare,jdbcType=DECIMAL},
      </if>
      <if test="record.exchangeRate != null" >
        exchange_rate = #{record.exchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPaied != null" >
        is_paied = #{record.isPaied,jdbcType=INTEGER},
      </if>
      <if test="record.isPublished != null" >
        is_published = #{record.isPublished,jdbcType=INTEGER},
      </if>
      <if test="record.agentType != null" >
        agent_type = #{record.agentType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update resource_sell_month
    set id = #{record.id,jdbcType=INTEGER},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      sell_month = #{record.sellMonth,jdbcType=CHAR},
      asset_family = #{record.assetFamily,jdbcType=INTEGER},
      provider_name = #{record.providerName,jdbcType=VARCHAR},
      sell_total = #{record.sellTotal,jdbcType=DECIMAL},
      sell_totalus = #{record.sellTotalus,jdbcType=DECIMAL},
      share_total = #{record.shareTotal,jdbcType=DECIMAL},
      share_totalus = #{record.shareTotalus,jdbcType=DECIMAL},
      bad_debt = #{record.badDebt,jdbcType=DECIMAL},
      tax = #{record.tax,jdbcType=DECIMAL},
      net_payment = #{record.netPayment,jdbcType=DECIMAL},
      sell_count = #{record.sellCount,jdbcType=INTEGER},
      exclusive_bonus = #{record.exclusiveBonus,jdbcType=DECIMAL},
      additional_share = #{record.additionalShare,jdbcType=DECIMAL},
      exchange_rate = #{record.exchangeRate,jdbcType=DECIMAL},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      is_paied = #{record.isPaied,jdbcType=INTEGER},
      is_published = #{record.isPublished,jdbcType=INTEGER},
      agent_type = #{record.agentType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vcg.provider.model.ResourceSellMonth" >
    update resource_sell_month
    <set >
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="sellMonth != null" >
        sell_month = #{sellMonth,jdbcType=CHAR},
      </if>
      <if test="assetFamily != null" >
        asset_family = #{assetFamily,jdbcType=INTEGER},
      </if>
      <if test="providerName != null" >
        provider_name = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="sellTotal != null" >
        sell_total = #{sellTotal,jdbcType=DECIMAL},
      </if>
      <if test="sellTotalus != null" >
        sell_totalus = #{sellTotalus,jdbcType=DECIMAL},
      </if>
      <if test="shareTotal != null" >
        share_total = #{shareTotal,jdbcType=DECIMAL},
      </if>
      <if test="shareTotalus != null" >
        share_totalus = #{shareTotalus,jdbcType=DECIMAL},
      </if>
      <if test="badDebt != null" >
        bad_debt = #{badDebt,jdbcType=DECIMAL},
      </if>
      <if test="tax != null" >
        tax = #{tax,jdbcType=DECIMAL},
      </if>
      <if test="netPayment != null" >
        net_payment = #{netPayment,jdbcType=DECIMAL},
      </if>
      <if test="sellCount != null" >
        sell_count = #{sellCount,jdbcType=INTEGER},
      </if>
      <if test="exclusiveBonus != null" >
        exclusive_bonus = #{exclusiveBonus,jdbcType=DECIMAL},
      </if>
      <if test="additionalShare != null" >
        additional_share = #{additionalShare,jdbcType=DECIMAL},
      </if>
      <if test="exchangeRate != null" >
        exchange_rate = #{exchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPaied != null" >
        is_paied = #{isPaied,jdbcType=INTEGER},
      </if>
      <if test="isPublished != null" >
        is_published = #{isPublished,jdbcType=INTEGER},
      </if>
      <if test="agentType != null" >
        agent_type = #{agentType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vcg.provider.model.ResourceSellMonth" >
    update resource_sell_month
    set provider_id = #{providerId,jdbcType=INTEGER},
      sell_month = #{sellMonth,jdbcType=CHAR},
      asset_family = #{assetFamily,jdbcType=INTEGER},
      provider_name = #{providerName,jdbcType=VARCHAR},
      sell_total = #{sellTotal,jdbcType=DECIMAL},
      sell_totalus = #{sellTotalus,jdbcType=DECIMAL},
      share_total = #{shareTotal,jdbcType=DECIMAL},
      share_totalus = #{shareTotalus,jdbcType=DECIMAL},
      bad_debt = #{badDebt,jdbcType=DECIMAL},
      tax = #{tax,jdbcType=DECIMAL},
      net_payment = #{netPayment,jdbcType=DECIMAL},
      sell_count = #{sellCount,jdbcType=INTEGER},
      exclusive_bonus = #{exclusiveBonus,jdbcType=DECIMAL},
      additional_share = #{additionalShare,jdbcType=DECIMAL},
      exchange_rate = #{exchangeRate,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      is_paied = #{isPaied,jdbcType=INTEGER},
      is_published = #{isPublished,jdbcType=INTEGER},
      agent_type = #{agentType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Base_Column_List_Dy" >
    <if test="fields==null" >
      <include refid="Base_Column_List" />
    </if>
    <if test="fields!=null" >
      <foreach collection="fields" item="field" separator="," >
        ${field}
      </foreach>
    </if>
  </sql>
</mapper>